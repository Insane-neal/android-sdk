apply plugin: 'com.android.library'
apply plugin: 'jacoco'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.1'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 18
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {
            debuggable true
            testCoverageEnabled = true
        }
        release {
            testCoverageEnabled = false
        }
    }
    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }
    sourceSets {
        main {
            assets.srcDirs = ["$rootDir/android-sdk/src/main/assets"]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile project(':android-sdk')
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'com.squareup:fest-android:1.0.8'
    androidTestCompile 'org.mockito:mockito-all:1.10.19'
    androidTestCompile('org.robolectric:robolectric:3.3.1') {
        exclude group: 'commons-logging'
        exclude group: 'org.apache.httpcomponents'
    }
}

jacoco {
    toolVersion = "0.7.8"
}

task robolectricReports(type: JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: '../android-sdk/build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/*$*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    def coverageSourceDirs = ['../android-sdk/src/main/java']
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('../tests/build/jacoco/testDebug.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }

}